# Don't send the nginx version number in error pages and server header
server_tokens off;

# Don't allow the page to render inside a frame of an iframe
add_header X-Frame-Options DENY;

# Disable sniffing for user supplied content
add_header X-Content-Type-Options nosniff;


# Redirect HTTP to HTTPS
server {
    listen 80;
    server_name _;

    location / {
        return 301 https://$host$request_uri;
    }
}


# Proxy Elasticsearch to have a custom URL
server {
    listen 443 ssl;
    server_name elasticsearch.{{ domain }};

    include /etc/nginx/tls.conf;

    location / {
        proxy_pass       {{ elasticsearch_host }};
        proxy_set_header X-Found-Cluster {{ elasticsearch_id }};
    }
}


# Proxy Kibana to have a custom URL
server {
    listen 443 ssl;
    server_name kibana.{{ domain }};

    include /etc/nginx/tls.conf;

    location / {
        proxy_pass       {{ kibana_host }};
        proxy_set_header X-Found-Cluster {{ kibana_id }};
    }
}


# Proxy Kibana to a custom URL and anonymous access
server {
    listen 443 ssl;
    server_name dashboard.{{ domain }};

    include /etc/nginx/tls.conf;

    location / {
        proxy_pass       {{ kibana_host }};
        proxy_set_header X-Found-Cluster {{ kibana_id }};
        proxy_set_header Authorization "Basic {{ kibana_basic_auth | b64encode }}";
        proxy_hide_header Kbn-License-Sig;
        proxy_hide_header Kbn-Name;
        proxy_hide_header Kbn-Xpack-Sig;
        proxy_hide_header X-Cloud-Request-Id;
        proxy_hide_header X-Found-Handling-Cluster;
        proxy_hide_header X-Found-Handling-Instance;
        proxy_hide_header X-Found-Handling-Server;
    }
}
